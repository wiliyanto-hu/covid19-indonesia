{"version":3,"sources":["components/BarChart.jsx","utils/sizeHelper.js","components/Card.jsx","components/Cards.jsx","components/ProvinceSelector.jsx","utils/dateFormat.js","utils/api.js","components/LineChart.jsx","components/Table.jsx","App.js","index.js"],"names":["withStyles","container","width","marginTop","data","classes","positif","dirawat","sembuh","meninggal","kasus","className","labels","datasets","label","backgroundColor","borderColor","sizes","size","xs","sm","md","lg","styles","Card","props","bgColor","color","CardFont","fontSize","type","total","Grid","item","CardContent","Typography","variant","start","end","parseInt","duration","separator","Cards","provinces","selected","useState","setData","useEffect","getProvince","find","province","provinsi","setProvince","spacing","justify","lastUpdate","ProvinceSelector","changeProvince","provinsis","map","i","value","FormControl","margin","InputLabel","htmlFor","NativeSelect","onChange","id","months","dateFormat","date","theDate","Date","getDate","getMonth","getFullYear","fetchCardData","a","axios","get","fetchProvinsiData","fetchCumulativeData","display","fetch","length","tanggal","positif_kumulatif","fill","sembuh_kumulatif","dirawat_kumulatif","meninggal_kumulatif","useStyles","makeStyles","table","BasicTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","App","indonesia","console","log","error","style","textAlign","e","target","toDateString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA4CeA,cAzCA,CACbC,UAAW,CACTC,MAAO,MACPC,UAAW,SAsCAH,EAnCE,SAAC,GAAuB,IAArBI,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxB,IAAKD,EACH,OAAO,KAF6B,IAI9BE,EAA+CF,EAA/CE,QAASC,EAAsCH,EAAtCG,QAASC,EAA6BJ,EAA7BI,OAAQC,EAAqBL,EAArBK,UAAWC,EAAUN,EAAVM,MAE7C,OACE,yBAASC,UAAWN,EAAQJ,UAA5B,SACE,cAAC,MAAD,CACEG,KAAM,CACJQ,OAAQ,CAAC,QAAS,cAAe,YAAa,UAC9CC,SAAU,CACR,CACEC,MAAO,SACPV,KAAM,CAACE,GAAWI,EAAOH,EAASC,EAAQC,GAC1CM,gBAAiB,CACf,0BACA,0BACA,0BACA,sBAEFC,YAAa,CACX,wBACA,wBACA,wBACA,gC,oDCxBDC,EAVD,SAACC,GAQb,MAAM,oBAAN,OAPc,CACZC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,aAG2BJ,GAAjC,MCHIK,EAAS,CACbC,KAAM,CACJT,gBAAiB,SAACU,GAAD,OAAYA,EAAMC,QAAUD,EAAMC,QAAU,SAC7DC,MAAO,SAACF,GAAD,OAAYA,EAAME,MAAQF,EAAME,MAAQ,UAEjDC,UAAQ,GACNC,SAAU,UADJ,cAELX,EAAK,MAAQ,CACZW,SAAU,WAHN,cAKLX,EAAK,MAAQ,CACZW,SAAU,WANN,IAyBK7B,cAAWuB,EAAXvB,EAfI,SAAC,GAAD,IAAG8B,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAO1B,EAAhB,EAAgBA,QAAhB,EAAyBsB,MAAzB,EAAgCD,QAAhC,OACjB,cAACM,EAAA,EAAD,CAAMC,MAAI,EAACd,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAApC,SACE,cAACE,EAAA,EAAD,CAAMb,UAAWN,EAAQmB,KAAzB,SACE,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKzB,UAAWN,EAAQuB,SAA5C,SACGE,IAEH,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKzB,UAAWN,EAAQuB,SAA5C,SACE,cAAC,IAAD,CAASS,MAAO,EAAGC,IAAKC,SAASR,GAAQS,SAAU,EAAGC,UAAU,kBC+B3DC,EAvDD,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EACjBC,mBAAS,IADQ,mBAClCzC,EADkC,KAC5B0C,EAD4B,KAYzC,GAHAC,qBAAU,YANU,WAA6B,IAA5BH,EAA2B,uDAAhB,YACxBI,EAAcL,EAAUM,MAC5B,SAACC,GAAD,OAAcA,EAASC,WAAaP,KAEtCE,EAAQE,GAGRI,CAAYR,KACX,CAACD,EAAWC,IACVxC,EAQE,CAAC,IACEE,EAA+CF,EAA/CE,QAASC,EAAsCH,EAAtCG,QAASC,EAA6BJ,EAA7BI,OAAQC,EAAqBL,EAArBK,UAAWC,EAAUN,EAAVM,MAC7C,OACE,qCACE,eAACsB,EAAA,EAAD,CAAM/B,WAAS,EAACoD,QAAS,EAAGC,QAAQ,SAApC,UACE,cAAC,EAAD,CACExB,KAAK,QACLC,MAAOzB,GAAWI,EAClBiB,MAAM,QACND,QAAQ,sBAEV,cAAC,EAAD,CACEI,KAAK,cACLC,MAAOxB,EACPoB,MAAM,QACND,QAAQ,sBAEV,cAAC,EAAD,CACEI,KAAK,YACLC,MAAOvB,EACPmB,MAAM,QACND,QAAQ,sBAEV,cAAC,EAAD,CACEI,KAAK,SACLC,MAAOtB,EACPkB,MAAM,QACND,QAAQ,yBAGZ,cAAC,EAAD,CAAUtB,KAAMA,OArCpB,OACE,cAAC,EAAD,CACE0B,KAAK,2BACLC,MAAM,QACNwB,WAAW,gB,2BCFJC,EAlBU,SAAC,GAA8B,IAA5BpD,EAA2B,EAA3BA,KAAMqD,EAAqB,EAArBA,eAChC,IAAKrD,EACH,OAAO,KAET,IAAMsD,EAAYtD,EAAKuD,KAAI,SAACR,EAAUS,GAAX,OACzB,wBAAQC,MAAOV,EAASA,SAAxB,SACGA,EAASA,UAD2BS,MAIzC,OACE,eAACE,EAAA,EAAD,CAAaC,OAAO,SAApB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,6BACA,cAACC,EAAA,EAAD,CAAcC,SAAUV,EAAgBW,GAAG,SAA3C,SACGV,QCdHW,EAAS,CACb,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,OASaC,EAPI,SAACC,GAClB,IAAMC,EAAU,IAAIC,KAAKF,GAEzB,MAAM,GAAN,OAAUC,EAAQE,UAAlB,YACEL,EAAOG,EAAQG,YADjB,YAEIH,EAAQI,gB,iBCjBDC,EAAa,uCAAG,8BAAAC,EAAA,+EAEFC,IAAMC,IAC3B,2DAHuB,uBAEjB5E,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,wHAAH,qDAUb6E,EAAiB,uCAAG,8BAAAH,EAAA,+EAENC,IAAMC,IAC3B,oEAH2B,uBAErB5E,EAFqB,EAErBA,KAFqB,kBAKtBA,GALsB,wHAAH,qDAUjB8E,EAAmB,uCAAG,8BAAAJ,EAAA,+EAERC,IAAMC,IAC3B,kEAH6B,uBAEvB5E,EAFuB,EAEvBA,KAFuB,kBAKxBA,GALwB,wHAAH,qDChB1BmB,EAAS,CACbtB,UAAU,aACRE,UAAW,OACXD,MAAO,OACNgB,EAAK,MAAQ,CACZiE,QAAS,UA2DAnF,cAAWuB,EAAXvB,EAvDG,SAAC,GAAiB,IAAfK,EAAc,EAAdA,QAAc,EACTwC,mBAAS,IADA,mBAC1BzC,EAD0B,KACpB0C,EADoB,KASjC,OAPAC,qBAAU,YACG,uCAAG,4BAAA+B,EAAA,sEACOI,IADP,OACN9E,EADM,OAEZ0C,EAAQ1C,GAFI,2CAAH,qDAIXgF,KACC,IACEhF,EAAKiF,OAKR,0BAAS1E,UAAWN,EAAQJ,UAA5B,UACE,wDACA,cAAC,OAAD,CACEG,KAAM,CACJQ,OAAQR,EAAKuD,KAAI,SAACvD,GAAD,OAAUkE,EAAWlE,EAAKkF,YAC3CzE,SAAU,CACR,CACEC,MAAO,OACPV,KAAMA,EAAKuD,KAAI,SAACvD,GAAD,OAAUA,EAAKmF,qBAC9BxE,gBAAiB,CAAC,0BAClBC,YAAa,2BACbwE,MAAM,GAER,CACE1E,MAAO,aACPV,KAAMA,EAAKuD,KAAI,SAACvD,GAAD,OAAUA,EAAKqF,oBAC9B1E,gBAAiB,CAAC,uBAClBC,YAAa,wBACbwE,MAAM,GAER,CACE1E,MAAO,eACPV,KAAMA,EAAKuD,KAAI,SAACvD,GAAD,OAAUA,EAAKsF,qBAC9B3E,gBAAiB,CAAC,uBAClBC,YAAa,oBACbwE,MAAM,GAER,CACE1E,MAAO,UACPV,KAAMA,EAAKuD,KAAI,SAACvD,GAAD,OAAUA,EAAKuF,uBAC9B5E,gBAAiB,CAAC,uBAClBC,YAAa,oBACbwE,MAAM,UApCT,Q,wECfLI,EAAYC,YAAW,CAC3BC,MAAO,CACL5F,MAAO,MACP6D,OAAQ,UAIG,SAASgC,EAAT,GAAoC,IAAdrC,EAAa,EAAbA,UAC7BrD,EAAUuF,IAEhB,OAAKlC,EAEH,yBAAS/C,UAAWN,EAAQyF,MAA5B,SACE,cAACE,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,aAAW,sBAAlB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,yBAGJ,cAACC,EAAA,EAAD,UACG/C,EAAUC,KAAI,SAACR,GAAD,OACb,eAACmD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWN,UAAU,KAAKS,MAAM,MAAhC,SACGvD,EAASA,WAEZ,cAACoD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACGrD,EAASzC,OAASyC,EAAS7C,UAE9B,cAACiG,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BrD,EAAS5C,UACpC,cAACgG,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BrD,EAAS3C,SACpC,cAAC+F,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BrD,EAAS1C,cATvB0C,EAASA,sBAhBb,K,OC+BVwD,MA3Cf,WAAgB,IAAD,EACW9D,mBAAS,IADpB,mBACNzC,EADM,KACA0C,EADA,KAyBb,GAvBAC,qBAAU,YACG,uCAAG,8BAAA+B,EAAA,+EAEcD,IAFd,cAEJ+B,EAFI,gBAGa3B,IAHb,OAGJ9B,EAHI,OAIVL,EAAQ,CACNK,SAAS,CAAD,2BAAQyD,GAAR,IAAmBzD,SAAU,eAA7B,mBAA+CA,IACvDI,WAAYqD,EAAUrD,aANd,kDASVsD,QAAQC,IAAR,KAAe,QACfhE,EAAQ,CACNiE,MACE,2EAZM,0DAAH,qDAgBX3B,KACC,IAKChF,EAAK2G,MACP,OAAO,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,SAAqC7G,EAAK2G,QAC5C,IAAK3G,EAAK+C,SACf,OAAO,oBAAI6D,MAAO,CAAEC,UAAW,UAAxB,gCA5BI,IA8BL9D,EAAmC/C,EAAnC+C,SAAUI,EAAyBnD,EAAzBmD,WAAYX,EAAaxC,EAAbwC,SAC9B,OACE,sBAAKjC,UAAU,MAAf,UACE,0DACA,cAAC,EAAD,CAAkBP,KAAM+C,EAAUM,eAZf,SAACyD,GACtBpE,EAAQ,2BAAK1C,GAAN,IAAYwC,SAAUsE,EAAEC,OAAOtD,YAYpC,mDAAoB,IAAIY,KAAKlB,GAAY6D,kBACzC,cAAC,EAAD,CAAOzE,UAAWQ,EAAUP,SAAUA,IACtC,cAAC,EAAD,IACA,cAAC,EAAD,CAAOc,UAAWP,QCzCxBkE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.020df70b.chunk.js","sourcesContent":["import { Bar } from \"react-chartjs-2\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  container: {\r\n    width: \"85%\",\r\n    marginTop: \"3rem\",\r\n  },\r\n};\r\nconst BarChart = ({ data, classes }) => {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const { positif, dirawat, sembuh, meninggal, kasus } = data;\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      <Bar\r\n        data={{\r\n          labels: [\"Cases\", \"In Recovery\", \"Recovered\", \"Deaths\"],\r\n          datasets: [\r\n            {\r\n              label: \"People\",\r\n              data: [positif || kasus, dirawat, sembuh, meninggal],\r\n              backgroundColor: [\r\n                \"rgba(255, 99, 132, 0.6)\",\r\n                \"rgba(54, 162, 235, 0.6)\",\r\n                \"rgba(255, 206, 86, 0.6)\",\r\n                \"rgba(255, 0, 0, 1)\",\r\n              ],\r\n              borderColor: [\r\n                \"rgba(255, 99, 132, 1)\",\r\n                \"rgba(54, 162, 235, 1)\",\r\n                \"rgba(255, 206, 86, 1)\",\r\n                \"rgba(255, 0, 0, 1)\",\r\n              ],\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(BarChart);\r\n","const sizes = (size) => {\r\n  const sizes = {\r\n    xs: \"576.98px\",\r\n    sm: \"767.98px\",\r\n    md: \"991.98px)\",\r\n    lg: \"1199.98px\",\r\n  };\r\n\r\n  return `@media(max-width:${sizes[size]})`;\r\n};\r\nexport default sizes;\r\n","import { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport CountUp from \"react-countup\";\r\nimport size from \"../utils/sizeHelper\";\r\n\r\nconst styles = {\r\n  Card: {\r\n    backgroundColor: (props) => (props.bgColor ? props.bgColor : \"white\"),\r\n    color: (props) => (props.color ? props.color : \"black\"),\r\n  },\r\n  CardFont: {\r\n    fontSize: \"1.9rem\",\r\n    [size(\"md\")]: {\r\n      fontSize: \"1.7rem\",\r\n    },\r\n    [size(\"xs\")]: {\r\n      fontSize: \"1.3rem\",\r\n    },\r\n  },\r\n};\r\nconst SingleCard = ({ type, total, classes, color, bgColor }) => (\r\n  <Grid item xs={5} sm={5} md={3} lg={2}>\r\n    <Card className={classes.Card}>\r\n      <CardContent>\r\n        <Typography variant=\"h4\" className={classes.CardFont}>\r\n          {type}\r\n        </Typography>\r\n        <Typography variant=\"h4\" className={classes.CardFont}>\r\n          <CountUp start={0} end={parseInt(total)} duration={5} separator=\",\" />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(SingleCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BarChart from \"./BarChart\";\r\nimport Card from \"./Card\";\r\nconst Cards = ({ provinces, selected }) => {\r\n  const [data, setData] = useState(\"\");\r\n\r\n  const setProvince = (selected = \"INDONESIA\") => {\r\n    const getProvince = provinces.find(\r\n      (province) => province.provinsi === selected\r\n    );\r\n    setData(getProvince);\r\n  };\r\n  useEffect(() => {\r\n    setProvince(selected);\r\n  }, [provinces, selected]);\r\n  if (!data) {\r\n    return (\r\n      <Card\r\n        type=\"Loading Data Please Wait\"\r\n        total=\"Total\"\r\n        lastUpdate=\"LastUpdate\"\r\n      />\r\n    );\r\n  } else {\r\n    const { positif, dirawat, sembuh, meninggal, kasus } = data;\r\n    return (\r\n      <>\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Card\r\n            type=\"Cases\"\r\n            total={positif || kasus}\r\n            color=\"white\"\r\n            bgColor=\"rgba(230,0,0,0.7)\"\r\n          />\r\n          <Card\r\n            type=\"In Recovery\"\r\n            total={dirawat}\r\n            color=\"white\"\r\n            bgColor=\"rgba(0,0,200,0.7)\"\r\n          />\r\n          <Card\r\n            type=\"Recovered\"\r\n            total={sembuh}\r\n            color=\"white\"\r\n            bgColor=\"rgba(0,170,0,0.9)\"\r\n          />\r\n          <Card\r\n            type=\"Deaths\"\r\n            total={meninggal}\r\n            color=\"white\"\r\n            bgColor=\"rgba(170,0,0,0.9)\"\r\n          />\r\n        </Grid>\r\n        <BarChart data={data} />\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default Cards;\r\n","import { FormControl, NativeSelect, InputLabel } from \"@material-ui/core\";\r\nconst ProvinceSelector = ({ data, changeProvince }) => {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const provinsis = data.map((provinsi, i) => (\r\n    <option value={provinsi.provinsi} key={i}>\r\n      {provinsi.provinsi}\r\n    </option>\r\n  ));\r\n  return (\r\n    <FormControl margin=\"normal\">\r\n      <InputLabel htmlFor=\"select\">Select Province</InputLabel>\r\n      <NativeSelect onChange={changeProvince} id=\"select\">\r\n        {provinsis}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ProvinceSelector;\r\n","const months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Des\",\r\n];\r\nconst dateFormat = (date) => {\r\n  const theDate = new Date(date);\r\n\r\n  return `${theDate.getDate()} ${\r\n    months[theDate.getMonth()]\r\n  } ${theDate.getFullYear()}`;\r\n};\r\nexport default dateFormat;\r\n","import axios from \"axios\";\r\n\r\nexport const fetchCardData = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://apicovid19indonesia-v2.vercel.app/api/indonesia\"\r\n    );\r\n    return data;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\nexport const fetchProvinsiData = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://apicovid19indonesia-v2.vercel.app/api/indonesia/provinsi\"\r\n    );\r\n    return data;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\nexport const fetchCumulativeData = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://apicovid19indonesia-v2.vercel.app/api/indonesia/harian\"\r\n    );\r\n    return data;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport dateFormat from \"../utils/dateFormat\";\r\nimport size from \"../utils/sizeHelper\";\r\nimport { fetchCumulativeData } from \"../utils/api\";\r\nconst styles = {\r\n  container: {\r\n    marginTop: \"2rem\",\r\n    width: \"85%\",\r\n    [size(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n};\r\nconst LineChart = ({ classes }) => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const data = await fetchCumulativeData();\r\n      setData(data);\r\n    };\r\n    fetch();\r\n  }, []);\r\n  if (!data.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      <h2>Cumulative Cases chart</h2>\r\n      <Line\r\n        data={{\r\n          labels: data.map((data) => dateFormat(data.tanggal)),\r\n          datasets: [\r\n            {\r\n              label: \"Case\",\r\n              data: data.map((data) => data.positif_kumulatif),\r\n              backgroundColor: [\"rgba(230, 105, 180, 0)\"],\r\n              borderColor: \"rgba(230, 105, 180, 0.7)\",\r\n              fill: true,\r\n            },\r\n            {\r\n              label: \"Recovered \",\r\n              data: data.map((data) => data.sembuh_kumulatif),\r\n              backgroundColor: [\"rgba(0, 250 , 0, 0)\"],\r\n              borderColor: \"rgba(0, 250 , 0, 0.7)\",\r\n              fill: true,\r\n            },\r\n            {\r\n              label: \"In Recovery \",\r\n              data: data.map((data) => data.dirawat_kumulatif),\r\n              backgroundColor: [\"rgba(0 , 0, 200, 0)\"],\r\n              borderColor: \"rgba(0,0,200,0.7)\",\r\n              fill: true,\r\n            },\r\n            {\r\n              label: \"Deaths \",\r\n              data: data.map((data) => data.meninggal_kumulatif),\r\n              backgroundColor: [\"rgba(255 , 0, 0, 0)\"],\r\n              borderColor: \"rgba(255,0,0,0.7)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LineChart);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: \"85%\",\r\n    margin: \"1rem\",\r\n  },\r\n});\r\n\r\nexport default function BasicTable({ provinsis }) {\r\n  const classes = useStyles();\r\n\r\n  if (!provinsis) return null;\r\n  return (\r\n    <section className={classes.table}>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"Covid19 cases table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Province</TableCell>\r\n              <TableCell align=\"center\">Cases</TableCell>\r\n              <TableCell align=\"center\">In Recovery</TableCell>\r\n              <TableCell align=\"center\">Recovered</TableCell>\r\n              <TableCell align=\"center\">Deaths</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {provinsis.map((provinsi) => (\r\n              <TableRow key={provinsi.provinsi}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {provinsi.provinsi}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {provinsi.kasus || provinsi.positif}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{provinsi.dirawat}</TableCell>\r\n                <TableCell align=\"center\">{provinsi.sembuh}</TableCell>\r\n                <TableCell align=\"center\">{provinsi.meninggal}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport Cards from \"./components/Cards\";\nimport ProvinceSelector from \"./components/ProvinceSelector\";\nimport LineChart from \"./components/LineChart\";\nimport Table from \"./components/Table\";\nimport \"./App.css\";\nimport { fetchProvinsiData, fetchCardData } from \"./utils/api\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const indonesia = await fetchCardData();\n        const provinsi = await fetchProvinsiData();\n        setData({\n          provinsi: [{ ...indonesia, provinsi: \"INDONESIA\" }, ...provinsi],\n          lastUpdate: indonesia.lastUpdate,\n        });\n      } catch (e) {\n        console.log(e, \"HERE\");\n        setData({\n          error:\n            \"Something went wrong, please check your connection and try again later\",\n        });\n      }\n    };\n    fetch();\n  }, []);\n\n  const changeProvince = (e) => {\n    setData({ ...data, selected: e.target.value });\n  };\n  if (data.error) {\n    return <h1 style={{ textAlign: \"center\" }}>{data.error}</h1>;\n  } else if (!data.provinsi) {\n    return <h1 style={{ textAlign: \"center\" }}>Loading Data......</h1>;\n  }\n  const { provinsi, lastUpdate, selected } = data;\n  return (\n    <div className=\"App\">\n      <h2>Indonesia COVID-19 Cases</h2>\n      <ProvinceSelector data={provinsi} changeProvince={changeProvince} />\n      <p>{`Last Update: ${new Date(lastUpdate).toDateString()}`}</p>\n      <Cards provinces={provinsi} selected={selected} />\n      <LineChart />\n      <Table provinsis={provinsi} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}