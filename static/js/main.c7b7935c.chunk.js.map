{"version":3,"sources":["components/BarChart.jsx","utils/sizeHelper.js","components/Card.jsx","components/Cards.jsx","components/ProvinceSelector.jsx","utils/dateFormat.js","utils/api.js","components/LineChart.jsx","components/Table.jsx","components/DataGrid.jsx","hooks/toggler.jsx","App.js","index.js"],"names":["withStyles","container","width","marginTop","data","classes","indo","positif","dirawat","sembuh","meninggal","kasus","className","labels","datasets","label","backgroundColor","borderColor","sizes","size","xs","sm","md","lg","styles","Card","props","bgColor","color","CardFont","fontSize","type","total","Grid","item","CardContent","Typography","variant","start","end","parseInt","duration","separator","Cards","provinces","selected","useState","setData","useEffect","getProvince","find","province","provinsi","setProvince","spacing","justify","lastUpdate","ProvinceSelector","changeProvince","provinsis","map","i","value","FormControl","margin","InputLabel","htmlFor","NativeSelect","onChange","id","months","dateFormat","date","theDate","Date","getDate","getMonth","getFullYear","fetchCardData","a","axios","get","fetchProvinsiData","fetchCumulativeData","display","fetch","length","tanggal","positif_kumulatif","fill","sembuh_kumulatif","dirawat_kumulatif","meninggal_kumulatif","useStyles","makeStyles","table","BasicTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","DataGrid","minHeight","columns","field","headerName","flex","headerAlign","sort","rows","React","filter","pageSize","checkboxSelection","disableColumnMenu","disableColumnReorder","hideFooterPagination","hideFooter","Toggler","initialState","state","setState","App","toggler","toggleEn","indonesia","rawProvinsi","prov","idx","error","style","textAlign","Switch","checked","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7b7935c.chunk.js","sourcesContent":["import { Bar } from \"react-chartjs-2\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n  container: {\r\n    width: \"85%\",\r\n    marginTop: \"3rem\",\r\n  },\r\n};\r\nconst BarChart = ({ data, classes, indo }) => {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const { positif, dirawat, sembuh, meninggal, kasus } = data;\r\n\r\n  const labels = () => {\r\n    if (indo) return [\"Kasus\", \"Dirawat\", \"Sembuh\", \"Meninggal\"];\r\n    return [\"Cases\", \"In Recovery\", \"Recovered\", \"Deaths\"];\r\n  };\r\n  return (\r\n    <section className={classes.container}>\r\n      <Bar\r\n        data={{\r\n          labels: labels(),\r\n          datasets: [\r\n            {\r\n              label: indo ? \"Orang\" : \"People\",\r\n              data: [positif || kasus, dirawat, sembuh, meninggal],\r\n              backgroundColor: [\r\n                \"rgba(255, 99, 132, 0.6)\",\r\n                \"rgba(54, 162, 235, 0.6)\",\r\n                \"rgba(255, 206, 86, 0.6)\",\r\n                \"rgba(255, 0, 0, 1)\",\r\n              ],\r\n              borderColor: [\r\n                \"rgba(255, 99, 132, 1)\",\r\n                \"rgba(54, 162, 235, 1)\",\r\n                \"rgba(255, 206, 86, 1)\",\r\n                \"rgba(255, 0, 0, 1)\",\r\n              ],\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(BarChart);\r\n","const sizes = (size) => {\r\n  const sizes = {\r\n    xs: \"576.98px\",\r\n    sm: \"767.98px\",\r\n    md: \"991.98px)\",\r\n    lg: \"1199.98px\",\r\n  };\r\n\r\n  return `@media(max-width:${sizes[size]})`;\r\n};\r\nexport default sizes;\r\n","import { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport CountUp from \"react-countup\";\r\nimport size from \"../utils/sizeHelper\";\r\n\r\nconst styles = {\r\n  Card: {\r\n    backgroundColor: (props) => (props.bgColor ? props.bgColor : \"white\"),\r\n    color: (props) => (props.color ? props.color : \"black\"),\r\n  },\r\n  CardFont: {\r\n    fontSize: \"1.9rem\",\r\n    [size(\"md\")]: {\r\n      fontSize: \"1.7rem\",\r\n    },\r\n    [size(\"xs\")]: {\r\n      fontSize: \"1.3rem\",\r\n    },\r\n  },\r\n};\r\nconst SingleCard = ({ type, total, classes, color, bgColor }) => (\r\n  <Grid item xs={5} sm={5} md={3} lg={2}>\r\n    <Card className={classes.Card}>\r\n      <CardContent>\r\n        <Typography variant=\"h4\" className={classes.CardFont}>\r\n          {type}\r\n        </Typography>\r\n        <Typography variant=\"h4\" className={classes.CardFont}>\r\n          <CountUp start={0} end={parseInt(total)} duration={5} separator=\",\" />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  </Grid>\r\n);\r\n\r\nexport default withStyles(styles)(SingleCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport BarChart from \"./BarChart\";\r\nimport Card from \"./Card\";\r\nconst Cards = ({ provinces, selected, indo }) => {\r\n  const [data, setData] = useState(\"\");\r\n\r\n  const setProvince = (selected = \"INDONESIA\") => {\r\n    const getProvince = provinces.find(\r\n      (province) => province.provinsi === selected\r\n    );\r\n    setData(getProvince);\r\n  };\r\n  useEffect(() => {\r\n    setProvince(selected);\r\n  }, [provinces, selected]);\r\n  if (!data) {\r\n    return (\r\n      <Card\r\n        type=\"Loading Data Please Wait\"\r\n        total=\"Total\"\r\n        lastUpdate=\"LastUpdate\"\r\n      />\r\n    );\r\n  } else {\r\n    const { positif, dirawat, sembuh, meninggal, kasus } = data;\r\n    return (\r\n      <>\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Card\r\n            type={indo ? \"Kasus\" : \"Cases\"}\r\n            total={positif || kasus}\r\n            color=\"white\"\r\n            bgColor=\"rgba(230,0,0,0.7)\"\r\n          />\r\n          <Card\r\n            type={indo ? \"Dirawat\" : \"In Recovery\"}\r\n            total={dirawat}\r\n            color=\"white\"\r\n            bgColor=\"rgba(0,0,200,0.7)\"\r\n          />\r\n          <Card\r\n            type={indo ? \"Sembuh\" : \"Recovered\"}\r\n            total={sembuh}\r\n            color=\"white\"\r\n            bgColor=\"rgba(0,170,0,0.9)\"\r\n          />\r\n          <Card\r\n            type={indo ? \"Meninggal\" : \"Deaths\"}\r\n            total={meninggal}\r\n            color=\"white\"\r\n            bgColor=\"rgba(170,0,0,0.9)\"\r\n          />\r\n        </Grid>\r\n        <BarChart data={data} indo={indo} />\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default Cards;\r\n","import { FormControl, NativeSelect, InputLabel } from \"@material-ui/core\";\r\nconst ProvinceSelector = ({ data, changeProvince, indo }) => {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  const provinsis = data.map((provinsi, i) => (\r\n    <option value={provinsi.provinsi} key={i}>\r\n      {provinsi.provinsi}\r\n    </option>\r\n  ));\r\n  return (\r\n    <FormControl margin=\"normal\">\r\n      <InputLabel htmlFor=\"select\">\r\n        {indo ? \"Pilih Provinsi\" : \"Select Province\"}\r\n      </InputLabel>\r\n      <NativeSelect onChange={changeProvince} id=\"select\">\r\n        {provinsis}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ProvinceSelector;\r\n","const months = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Des\",\r\n];\r\nconst dateFormat = (date) => {\r\n  const theDate = new Date(date);\r\n\r\n  return `${theDate.getDate()} ${\r\n    months[theDate.getMonth()]\r\n  } ${theDate.getFullYear()}`;\r\n};\r\nexport default dateFormat;\r\n","import axios from \"axios\";\r\n\r\nexport const fetchCardData = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://apicovid19indonesia-v2.vercel.app/api/indonesia\"\r\n    );\r\n    return data;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\nexport const fetchProvinsiData = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://apicovid19indonesia-v2.vercel.app/api/indonesia/provinsi\"\r\n    );\r\n    return data;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\nexport const fetchCumulativeData = async () => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://apicovid19indonesia-v2.vercel.app/api/indonesia/harian\"\r\n    );\r\n    return data;\r\n  } catch (e) {\r\n    return e;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport dateFormat from \"../utils/dateFormat\";\r\nimport size from \"../utils/sizeHelper\";\r\nimport { fetchCumulativeData } from \"../utils/api\";\r\nconst styles = {\r\n  container: {\r\n    marginTop: \"2rem\",\r\n    width: \"85%\",\r\n    [size(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n};\r\nconst LineChart = ({ classes, indo }) => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const data = await fetchCumulativeData();\r\n      setData(data);\r\n    };\r\n    fetch();\r\n  }, []);\r\n  if (!data.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      <h2>{indo ? \"Grafik Kasus Kumulatif\" : \"Cumulative Cases chart\"}</h2>\r\n      <Line\r\n        data={{\r\n          labels: data.map((data) => dateFormat(data.tanggal)),\r\n          datasets: [\r\n            {\r\n              label: indo ? \"Kasus\" : \"Case\",\r\n              data: data.map((data) => data.positif_kumulatif),\r\n              backgroundColor: [\"rgba(230, 105, 180, 0)\"],\r\n              borderColor: \"rgba(230, 105, 180, 0.7)\",\r\n              fill: true,\r\n            },\r\n            {\r\n              label: indo ? \"Sembuh\" : \"Recovered \",\r\n              data: data.map((data) => data.sembuh_kumulatif),\r\n              backgroundColor: [\"rgba(0, 250 , 0, 0)\"],\r\n              borderColor: \"rgba(0, 250 , 0, 0.7)\",\r\n              fill: true,\r\n            },\r\n            {\r\n              label: indo ? \"Dirawat\" : \"In Recovery \",\r\n              data: data.map((data) => data.dirawat_kumulatif),\r\n              backgroundColor: [\"rgba(0 , 0, 200, 0)\"],\r\n              borderColor: \"rgba(0,0,200,0.7)\",\r\n              fill: true,\r\n            },\r\n            {\r\n              label: indo ? \"Meninggal\" : \"Deaths \",\r\n              data: data.map((data) => data.meninggal_kumulatif),\r\n              backgroundColor: [\"rgba(255 , 0, 0, 0)\"],\r\n              borderColor: \"rgba(255,0,0,0.7)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(LineChart);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport size from \"../utils/sizeHelper\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: \"85%\",\r\n    marginTop: \"2.5rem\",\r\n    display: \"none\",\r\n    [size(\"xs\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function BasicTable({ provinsis, indo }) {\r\n  const classes = useStyles();\r\n\r\n  if (!provinsis) return null;\r\n  return (\r\n    <section className={classes.table}>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"Covid19 cases table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Province</TableCell>\r\n              <TableCell align=\"center\">{indo ? \"Kasus\" : \"Cases\"}</TableCell>\r\n              <TableCell align=\"center\">\r\n                {indo ? \"Dirawat\" : \"In Recovery\"}\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {indo ? \"Sembuh\" : \"Recovered\"}\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {indo ? \"Meninggal\" : \"Deaths\"}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {provinsis.map((provinsi) => (\r\n              <TableRow key={provinsi.provinsi}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {provinsi.provinsi}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {provinsi.kasus || provinsi.positif}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{provinsi.dirawat}</TableCell>\r\n                <TableCell align=\"center\">{provinsi.sembuh}</TableCell>\r\n                <TableCell align=\"center\">{provinsi.meninggal}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </section>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport size from \"../utils/sizeHelper\";\r\n\r\nconst styles = {\r\n  DataGrid: {\r\n    minHeight: 500,\r\n    width: \"85%\",\r\n    marginTop: \"2.5rem\",\r\n    [size(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction DataGridTable({ provinsis, classes, indo }) {\r\n  const columns = [\r\n    {\r\n      field: \"provinsi\",\r\n      headerName: indo ? \"Provinsi\" : \"Province\",\r\n      flex: 1.5,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"kasus\",\r\n      headerName: indo ? \"Kasus\" : \"Cases\",\r\n      flex: 1,\r\n      type: \"number\",\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n      sort: \"asc\",\r\n    },\r\n    {\r\n      field: \"meninggal\",\r\n      headerName: indo ? \"Meninggal\" : \"Deaths\",\r\n      flex: 1,\r\n      type: \"number\",\r\n      align: \"center\",\r\n      headerAlign: \"center\",\r\n    },\r\n    {\r\n      field: \"sembuh\",\r\n      headerName: indo ? \"Sembuh\" : \"Recovered\",\r\n      type: \"string\",\r\n      flex: 1,\r\n      headerAlign: \"center\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      field: \"dirawat\",\r\n      headerName: indo ? \"Dirawat\" : \"In Recovery\",\r\n      flex: 1,\r\n      type: \"number\",\r\n      align: \"center\",\r\n      headerAlign: \"center\",\r\n    },\r\n  ];\r\n\r\n  const rows = React.useMemo(() => {\r\n    if (!provinsis) return null;\r\n    return provinsis.filter((provinsi) => provinsi.provinsi !== \"INDONESIA\");\r\n  }, [provinsis]);\r\n  return (\r\n    <div className={classes.DataGrid}>\r\n      <p>\r\n        {indo\r\n          ? \"Tekan header pada tabel untuk mengurutkan baris\"\r\n          : \"Click on header to sort\"}\r\n      </p>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={rows.length}\r\n        checkboxSelection={false}\r\n        disableColumnMenu\r\n        disableColumnReorder={true}\r\n        hideFooterPagination\r\n        hideFooter\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default withStyles(styles)(DataGridTable);\r\n","import React from \"react\";\r\n\r\nconst Toggler = (initialState) => {\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const toggle = () => setState(!state);\r\n\r\n  return [state, toggle];\r\n};\r\nexport default Toggler;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Switch } from \"@material-ui/core\";\nimport Cards from \"./components/Cards\";\nimport ProvinceSelector from \"./components/ProvinceSelector\";\nimport LineChart from \"./components/LineChart\";\nimport Table from \"./components/Table\";\nimport DataGrid from \"./components/DataGrid\";\nimport dateFormat from \"./utils/dateFormat\";\nimport { fetchProvinsiData, fetchCardData } from \"./utils/api\";\nimport toggler from \"./hooks/toggler\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [indo, toggleEn] = toggler(true);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const indonesia = await fetchCardData();\n        const rawProvinsi = await fetchProvinsiData();\n        const provinsi = rawProvinsi.map((prov, idx) => {\n          return { ...prov, id: idx };\n        });\n        setData({\n          provinsi: [\n            { ...indonesia, provinsi: \"INDONESIA\", id: 99 },\n            ...provinsi,\n          ],\n          lastUpdate: indonesia.lastUpdate,\n        });\n      } catch (e) {\n        setData({\n          error:\n            \"Something went wrong, please check your connection and try again later\",\n        });\n      }\n    };\n    fetch();\n  }, []);\n\n  const changeProvince = (e) => {\n    setData({ ...data, selected: e.target.value });\n  };\n  if (data.error) {\n    return <h1 style={{ textAlign: \"center\" }}>{data.error}</h1>;\n  } else if (!data.provinsi) {\n    return <h1 style={{ textAlign: \"center\" }}>Loading Data......</h1>;\n  }\n  const { provinsi, lastUpdate, selected } = data;\n\n  return (\n    <div className=\"App\">\n      <div className=\"Language\">\n        <span>{indo ? \"ID\" : \"EN\"}</span>\n        <Switch checked={indo} onChange={toggleEn} color=\"default\" />\n      </div>\n      <h2>{indo ? \"Kasus COVID-19 Indonesia\" : \"Indonesia COVID-19 Cases\"}</h2>\n      <ProvinceSelector\n        data={provinsi}\n        changeProvince={changeProvince}\n        indo={indo}\n      />\n      <p>{`${indo ? \"Diperbarui\" : \"Last Update\"}: ${dateFormat(\n        lastUpdate\n      )}`}</p>\n      <Cards provinces={provinsi} selected={selected} indo={indo} />\n      <LineChart indo={indo} />\n      <DataGrid provinsis={provinsi} indo={indo} />\n      <Table provinsis={provinsi} indo={indo} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}